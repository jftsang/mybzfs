#!/usr/bin/env python3
import random

HEADER = "dogfight_header.bzw"

def vec2str(vec):
    return " ".join([str(x) for x in vec])

def make_meshbox(position, size, rotation=0, physics=None, texture=None):
    physline = f"phydrv {physics}" if physics else ""
    textureline = f"matref {texture}" if texture else ""
    return f"""meshbox
 position {vec2str(position)}
 size {vec2str(size)}
 rotation {rotation}
 {physline}
 {textureline}
end"""

def make_pyramid(position, size, rotation=0, physics=None, texture=None):
    physline = f"phydrv {physics}" if physics else ""
    textureline = f"matref {texture}" if texture else ""
    return f"""pyramid
 position {vec2str(position)}
 size {vec2str(size)}
 rotation {rotation}
 {physline}
 {textureline}
end"""


def make_shield(name, position, rotation, size, border):
    return f"""teleporter {name}
 position {vec2str(position)}
 rotation {rotation}
 size {vec2str(size)}
 border {border}
end
link
 name ln_{name}
 from {name}:f
 to {name}:f
end"""

with open(HEADER, "r") as head:
    print(head.read())
print("")
print("### BEGIN AUTOGENERATED SECTION ###")


shields_base = [
    make_shield("red_base_front", [420, 0, 15], 180, [0.125, 15, 6], 0.9),
    make_shield("red_base_right", [450, 30, 15], 90, [0.125, 10, 6], 0.9),
    make_shield("red_base_left", [450, -30, 15], -90, [0.125, 10, 6], 0.9),

    make_shield("blue_base", [-420, 0, 15], 0, [0.125, 15, 6], 0.9),
    make_shield("blue_base_right", [-450, -30, 15], -90, [0.125, 10, 6], 0.9),
    make_shield("blue_base_left", [-450, 30, 15], 90, [0.125, 10, 6], 0.9),
]
print("\n# Shields base")
for s in shields_base:
    print(s)


shields_upstairs = []
for team in ["red", "blue"]:
    xpos = 390 if team == "red" else -390
    rot = 180 if team == "red" else 0
    for n in range(8):
        ypos = 100 * n - 350
        name = f"{team}_upstairs_{n}"
        shields_upstairs.append(
                make_shield(name, [xpos, ypos, 15],
                            rot, [0.125, 15, 7.5], 1))
    for n in range(7):
        ypos = 100 * n - 300
        if ypos == 0: continue
        shields_upstairs.append(
                make_meshbox([xpos, ypos, 15], [0.125, 34, 8.5]))

print("\n# Shields upstairs")
for s in shields_upstairs:
    print(s)


shields_downstairs = []
for team in ["red", "blue"]:
    xpos = 325 if team == "red" else -325
    rot = 180 if team == "red" else 0
    for n in range(9):
        ypos = 100 * n - 400
        name = f"{team}_downstairs_{n}"
        shields_downstairs.append(
                make_shield(name, [xpos, ypos, 0],
                            rot, [0.125, 15, 7.5], 1))
    for n in range(8):
        ypos = 100 * n - 350
        shields_downstairs.append(
                make_meshbox([xpos, ypos, 0], [0.125, 34, 8.5]))

print("\n# Shields downstairs")
for s in shields_downstairs:
    print(s)


print("\n# Central aisles")
print(make_meshbox([0, 30, 0], [300, 20, 2]))
print(make_meshbox([0, 49, 0], [300, 1, 3.4]))
print(make_meshbox([0, 11, 0], [300, 1, 3.4]))

print(make_meshbox([0, -30, 0], [300, 20, 2]))
print(make_meshbox([0, -49, 0], [300, 1, 3.4]))
print(make_meshbox([0, -11, 0], [300, 1, 3.4]))

#for xpos in range(-350, 400, 50):
#    print(make_meshbox([xpos, 0, 10], [20, 20, 1]))

print("\n# Islands")
for xpos in range(-300, 350, 50):
    for ypos in range(-280, 320, 40):
        if -50 <= ypos <= 100:
            continue
        if random.random() > 0.5:
            continue
        if random.random() > 0.7:
            print(make_meshbox([xpos + random.uniform(-3, 3),
                                ypos + random.uniform(-8, 8),
                                0],
                            size=[20+random.uniform(-5, 5),
                                  20+random.uniform(-5, 5),
                                  2 + random.uniform(0, 7)],
                            rotation=random.uniform(0, 360))
                )
        else:
            print(make_pyramid([xpos + random.uniform(-3, 3),
                                ypos + random.uniform(-8, 8),
                                0],
                            size=[10+random.uniform(-5, 2),
                                  10+random.uniform(-5, 2),
                                  8 + random.uniform(0, 7)],
                            rotation=random.uniform(0, 360),
                            texture="shiny")
                )

print("")
print("# Inner rails")
print(make_meshbox([0, 300, 5], [230, 20, 1]))
print(make_meshbox([0, -300, 5], [230, 20, 1]))

print("")
print("# Side rails")
print(make_meshbox([0, 450, 5], [270, 30, 1],
                   physics="eastbound", texture="caution"))
print(make_meshbox([0, -450, 5], [270, 30, 1],
                   physics="westbound", texture="caution"))

print("# Trampolines")
print(make_meshbox([-320, 450, 5], [50, 30, 1],
                   physics="redtrampoline",
                   texture="redtrampolinetex"))
print(make_meshbox([300, 450, 5], [30, 30, 1],
                   physics="redtrampoline",
                   texture="redtrampolinetex"))

print(make_meshbox([320, -450, 5], [50, 30, 1],
                   physics="bluetrampoline",
                   texture="bluetrampolinetex"))
print(make_meshbox([-300, -450, 5], [30, 30, 1],
                   physics="bluetrampoline",
                   texture="bluetrampolinetex"))
